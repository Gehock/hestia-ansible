---
- name: Install steamcmd and Arma
  hosts: arma
  become: yes
  become_user: "{{ user }}"

  vars:
    user: arma
    home: "/srv/{{ user }}"
    server: "{{ home }}/server"
    repodir: "{{ server }}/server-handling"
    link: "{{ server }}/link"
    steam_dir: "{{ home }}/steamcmd"
    steam_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          36383861316535363530346361643439373262343438643365323236656430633461616164353930
          3438373433636666356566343034613033393535383464330a333834353539646565383361383236
          65396537366465636232366563656166356132633838366465666132656338323834626162313436
          3365326635353837320a356261633236623732366632336232646135616265303364633730376130
          3066
    workshop_checker:
      mail: 'updatebot@zeusops.com'
      password: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        38373165613865303133623438353339353262653635623432353465343166643235313462303536
        3066353631626235636565653933306261643231393064330a356463303438356162633739383966
        65313961353066333137616461346639336531323463353064306661626137393161343665393535
        3837336639666463320a666239306165626363643462623066643236636635623539623066356234
        30663036663966613137366339636331373739656638633661383462623263653064
      recipients:
      - gehock@zeusops.com
      - berger@zeusops.com
      webhook_secret: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        37323666613639626433396633616566323839646563396632333638363430656361356231393931
        3834666133336532306536646533356433646437373038340a303663306331323735393263326634
        62383161646166353464323631663539306234643739353565303435306161373739343430306537
        3566373665313532620a646332306566366338353764613764346230613938366337613461373663
        33623739653864636532646533376636393234393061613430333535373265356637623034616233
        64653764363936336662303364363637616430646663663562333839643331623364373662313730
        65316638333962303962396338303937313161326531333065353932353636656462346665336236
        31396431636138656139363832626239363664643138343665363166666137333331356537326363
        3066

    webhook_url: 'https://discord.com/api/webhooks/{{ workshop_checker.webhook_secret }}'
    repos:
    - { name: server-handling, dest: "{{ repodir }}" }
    - { name: modlists, dest: "{{ repodir }}/modlists" }
    - { name: workshop-checker, dest: "{{ repodir }}/bin/internal/workshop-checker" }
    - { name: userconfig, dest: "{{ link }}/userconfig" }
    # The profiles repo gets modified every time the server runs -> can't be
    # pulled automatically because of local changes
    - { name: poseidon-profiles, dest: "{{ link }}/profiles", branch: main, pull_updates: no }
    - { name: mod-preset-convert, dest: "{{ home }}/preset-convert", branch: main }
    ufw_apps:
    - { file: arma-server, app: Arma }
    symlinks:
    - { src: "{{ link }}", dest: "{{ home }}/link" }
    - { src: "{{ repodir }}/modlists", dest: "{{ home }}/modlists" }
    - { src: "{{ server }}/base-installation", dest: "{{ home }}/arma3" }


  tasks:
  - name: Create mission upload group
    become: yes
    become_user: root
    ansible.builtin.group:
      name: mission_upload
  - name: Create user
    become: yes
    become_user: root
    ansible.builtin.user:
      name: "{{ user }}"
      system: yes
      home: "{{ home }}"
      shell: /bin/bash
      groups: mission_upload
      append: yes
  - name: Install rename
    become: yes
    become_user: root
    ansible.builtin.apt:
      name: rename
      update_cache: yes

  # UFW
  # TODO: move into a role
  - name: Install UFW apps
    become: yes
    become_user: root
    ansible.builtin.copy:
      src: "files/ufw/applications.d/{{ item.file }}"
      dest: "/etc/ufw/applications.d/{{ item.file }}"
    loop: "{{ ufw_apps }}"
  - name: Enable UFW rules
    become: yes
    become_user: root
    community.general.ufw:
      rule: allow
      name: "{{ item.app }}"
    loop: "{{ ufw_apps }}"


  - name: Set PATH
    ansible.builtin.lineinfile:
      path: "{{ home }}/.bashrc"
      line: "{{ item }}"
    loop:
    - "PATH={{ repodir }}/bin:$PATH"
    - "export STEAM_DIR={{ steam_dir }}"
  - name: Set git configs
    community.general.git_config:
      scope: global
      name: "{{ item.config }}"
      value: "{{ item.value }}"
    loop:
    - { config: user.name,  value: Sami Laine }
    - { config: user.email, value: sami.v.laine@gmail.com }

  - name: Create SSH directory
    ansible.builtin.file:
      path: "{{ home }}/.ssh"
      state: directory
  - name: Install SSH dependency
    ansible.builtin.pip:
      name: stormssh
  - name: Generate SSH deploy keys
    community.crypto.openssh_keypair:
      type: ed25519
      path: "{{ home }}/.ssh/{{ item.name }}_deploy_key"
      comment: "{{ user }}@{{ ansible_hostname }}#{{ item.name }}"
    loop: "{{ repos }}"
    register: sshkey
  - name: Print keys
    when: sshkey.changed
    # TODO: format this in a more beautiful way
    debug:
      #msg: "{{ sshkey | json_query('results[*].[public_key, comment]') }}"
      msg: "SSH key: {{ item }}"
    loop: "{{ sshkey | json_query('results[*].[public_key, comment]') | json_query(\"[*].join(' ', @)\")  }}"
    loop_control:
      label: 'key'
  - name: Prompt to add deploy keys
    when: sshkey.changed
    ansible.builtin.pause:
      prompt: "add the above keys to GitHub before continuing"

  - name: Create SSH configs
    community.general.ssh_config:
      user: "{{ user }}"
      host: "github.com-{{ item.name }}"
      hostname: github.com
      identity_file: "{{ home }}/.ssh/{{ item.name }}_deploy_key"
    loop: "{{ repos }}"

  - name: Clone repos
    ansible.builtin.git:
      repo: "git@github.com-{{ item.name }}:zeusops/{{ item.name }}.git"
      dest: "{{ item.dest }}"
      accept_newhostkey: yes
      version: "{{ item.branch | d('hestia') }}"
      # Submodules are cloned manually because we want to set the SSH remote
      # address instead of HTTPS
      recursive: no
      update: "{{ item.pull_updates | d('yes') }}"
    loop: "{{ repos }}"
  - name: Install workshop-checker dependencies
    ansible.builtin.pip:
      requirements: "{{ repodir }}/bin/internal/workshop-checker/requirements.txt"
      virtualenv: "{{ repodir }}/bin/internal/workshop-checker/venv"
  - name: Install preset-convert dependencies
    ansible.builtin.pip:
      requirements: "{{ home }}/preset-convert/requirements.txt"
      virtualenv: "{{ home }}/preset-convert/venv"

  - name: Create workshop-checker config
    ansible.builtin.template:
      src: files/arma/workshop-checker/secret.py.j2
      dest: "{{ repodir }}/bin/internal/workshop-checker/secret.py"
      mode: '0600'
    vars:
      mail: "{{ workshop_checker.mail }}"
      password: "{{ workshop_checker.password }}"
      recipients: "{{ workshop_checker.recipients }}"
      #webhook_url: "{{ webhook_url }}"

  - name: Create cronjob to check mod updates
    become: yes
    become_user: root
    ansible.builtin.cron:
      name: Check for mod updates
      cron_file: check-mod-upates
      minute: "*/15"
      user: "{{ user }}"
      job: "{{ repodir }}/bin/update-mods.sh main --check-only --notify --no-mail > /dev/null"

  - name: Symlink server-handling
    ansible.builtin.file:
      src: "{{ repodir }}"
      dest: "{{ item }}"
      state: link
    loop:
     - "{{ home }}/files"
     - "{{ server }}/files"
  - name: Other symlinks
    ansible.builtin.file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
    loop: "{{ symlinks }}"

  - name: Install steamcmd
    become: yes
    become_user: root
    import_role:
      name: lutangar.steamcmd
    vars:
      # FIXME: this doesn't actually override the variable as expected, had to
      # truncate vars/Debian.yml in the role for this to apply
      steamcmd_packages:
      - lib32gcc-s1
      steamcmd_create_user: no
      steamcmd_user: "{{ user }}"
      steamcmd_user_home: "{{ home }}/"
      steamcmd_directory: "{{ steam_dir }}/"
      steamcmd_steam:
        username: zeusoperations
        password: "{{ steam_password }}"

  - name: Set mpmissions permissions
    ansible.builtin.file:
      path: "{{ link }}/mpmissions"
      state: directory
      mode: 02770
      group: mission_upload
  - name: Set home permissions
    ansible.builtin.file:
      path: "{{ home }}"
      state: directory
      mode: "o+x"

  - name: Create arma systemd service
    become: yes
    become_user: root
    ansible.builtin.template:
      src: files/arma/systemd.service.j2
      dest: /etc/systemd/system/arma@.service
    vars:
      bin: "{{ repodir }}/bin"
      group: "{{ user }}"
      workdir: "{{ server }}/base-installation"
    notify:
    - Reload systemd
  - name: Enable arma service
    become: yes
    become_user: root
    ansible.builtin.service:
      #state: started
      enabled: yes
      name: arma@main.service
  - name: Create cronjob to start HCs
    become: yes
    become_user: root
    ansible.builtin.cron:
      name: Start HCs after boot
      cron_file: start-hcs
      special_time: reboot
      user: root
      job: sleep 120 ; for x in 1 2 3; do systemctl start arma@main-hc$x; sleep 5; done

  handlers:
  - name: Reload systemd
    become: yes
    become_user: root
    ansible.builtin.systemd:
      daemon_reload: yes
