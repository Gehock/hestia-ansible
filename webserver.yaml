---
- name: Install nginx
  hosts: web

  roles:
  - hispanico.nginx_revproxy

  vars:
    homedir: /srv
    webhook: { user: webhook, name: git.zeusops.com, dest: "{{ homedir }}/webhook/webhook", gh_user: Gehock }
    www_dir: /var/www
    cockpit_origins:
    - https://cockpit.zeusops.com

    nginx_revproxy_sites:
      #default:
      #  ssl: false
      #  letsencrypt: false

      git.zeusops.com:
        domains:
          - git.zeusops.com
          - git.hestia.zeusops.com
        upstreams:
          - { backend_address: 127.0.0.1, backend_port: 9000 }
        ssl: true
        letsencrypt: true
        letsencrypt_email: webmaster@zeusops.com
      cockpit.zeusops.com:
        domains:
          - cockpit.zeusops.com
        upstreams:
          #- { backend_address: /run/cockpit/wsinstance/http.sock, backend_port: 8080 }
          - { backend_address: 127.0.0.1, backend_port: 9090 }
        ssl: true
        letsencrypt: true
        letsencrypt_email: webmaster@zeusops.com
      wakapi.gehock.fi:
        domains:
          - wakapi.gehock.fi
        upstreams:
          - { backend_address: 127.0.0.1, backend_port: 3000 }
        ssl: true
        letsencrypt: true
        letsencrypt_email: webmaster@zeusops.com
    # Without these the revproxy role will remove manually managed sites
    nginx_revproxy_remove_webroot_sites: no
    nginx_revproxy_de_activate_sites: no
    zeusopscom_redirects:
    - [doc, "https://docs.google.com/document/d/1NKLi_VazqMgpnZYHa6FDOQbZyfqLDPosi4xdOQPgHMU/edit?usp=sharing"]
    - [rules, "https://docs.google.com/document/d/1DWK53LF3AjRqxZkb4qQXeBBvtSIOtamnUXyk2b6aaAs/edit?usp=sharing"]
    - [zeus, "https://docs.google.com/document/d/1PFK__UcgmAJ1P3xBnJxeW2ow7u8bgEfM8lkpHJrLYDU/edit?usp=sharing"]
    - [template, "https://github.com/zeusops/mission-templates"]
    - [discord, "https://discord.gg/UAgPN7j"]
    - [units, "https://units.arma3.com/unit/zeusops"]
    - [attendance, "https://docs.google.com/spreadsheets/d/1obK3_FU5yMzhBgFLmk3g0v5dn5wFqT30RQXHWCAccCQ/edit"]
    - [allattendance, "/all"]
    - [all, "https://docs.google.com/spreadsheets/d/1Blc0MwWPSgKfWQ1KruEhxQ8T-z3Ig1Y0RqDh_ntCWZo/edit"]
    - [mod, "https://steamcommunity.com/sharedfiles/filedetails/?id=2168912301"]
    - [mods, "https://steamcommunity.com/sharedfiles/filedetails/?id=754233724"]
    - [optional, "/optionals"]
    - [optionals, "https://steamcommunity.com/sharedfiles/filedetails/?id=1115077330"]
    - [jointop, "https://steamcommunity.com/sharedfiles/filedetails/?id=1312402629"]
    - [terrains, "https://steamcommunity.com/sharedfiles/filedetails/?id=1424089214"]
    - [tsplugin, "/plugin"]
    - [tsplugins, "/plugin"]
    - [plugins, "/plugin"]
    - [plugin, "https://cdn.discordapp.com/attachments/235478105177718785/829774774322200606/task_force_radio.ts3_plugin"]
    - [feedback, "https://docs.google.com/forms/d/e/1FAIpQLSd_CUC9Bi8pelnJLtK4dKxLyWqHkO_LH8z4MIuCli1JUm0jdQ/viewform"]
    - [watch, "https://w2g.tv/rooms/zeusoperations-p7wbtfre05cwi65s"]
    - [anniversary, "https://docs.google.com/spreadsheets/d/1UXULpdp5zB83E72JDGmGrBpNOhtkFkNPoreqh0H8og8/edit#gid=1299351339"]
    - [points, "https://banner.zeusops.com/image/"]
    - [co, "https://hackmd.io/@zeusops/Syl2LXL1i"]
    - [meetings, "https://hackmd.io/MNNjYnckQgSESY5jsf7pFQ?view"]
    - [review, "https://docs.google.com/forms/d/e/1FAIpQLSfWY53jmyAKsOg12LZw4AqdL40IBynUJBp2I7du7BsmJX4yfQ/viewform"]
    - [reviewresponses, "https://docs.google.com/spreadsheets/d/1_c2tc22Udwf2Nl-AOQD_qnwGFlULoLnLP7hx8Fns-ZE/edit?usp=sharing"]
    - [hqresponses, "https://docs.google.com/spreadsheets/d/1BtosRxvotFQJfGNPnw_WuZENEpXtKBhx1v8DXLys25o/edit?usp=sharing"]
    - [github, "https://github.com/zeusops"]
    - [coinfo, "https://docs.google.com/document/d/1mYguW7eceldh_mXQreNOOEHtThQ3GCRow4VyzqvrU6c/edit"]


  tasks:
  # === General ===
  - name: Remove apache
    ansible.builtin.apt:
      name: apache2
      state: absent
  - name: Install nginx
    ansible.builtin.apt:
      name: nginx
      update_cache: true
  - name: Allow nginx through the firewall
    community.general.ufw:
      rule: allow
      name: Nginx Full

  # === Webhook ===
  - name: Create user
    ansible.builtin.user:
      name: "{{ webhook.user }}"
      system: yes
      home: "{{ homedir }}/{{ webhook.user }}"
  - name: Create SSH directory
    become: yes
    become_user: "{{ webhook.user }}"
    ansible.builtin.file:
      path: "{{ homedir }}/{{ webhook.user }}/.ssh"
      state: directory
  - name: Install SSH dependency
    ansible.builtin.pip:
      name: stormssh
  - name: Generate SSH deploy key
    become: yes
    become_user: "{{ webhook.user }}"
    community.crypto.openssh_keypair:
      type: ed25519
      path: "{{ homedir }}/{{ webhook.user }}/.ssh/{{ webhook.name }}_deploy_key"
      comment: "{{ webhook.user }}@{{ ansible_hostname }}#{{ webhook.name }}"
    # TODO: make sshkey parser support a single item below
    loop: [1]
    register: sshkey
  - name: Print key
    when: sshkey.changed
    # TODO: format this in a more beautiful way
    debug:
      #msg: "{{ sshkey | json_query('results[*].[public_key, comment]') }}"
      msg: "SSH key: {{ item }}"
    loop: "{{ sshkey | json_query('results[*].[public_key, comment]') | json_query(\"[*].join(' ', @)\")  }}"
    loop_control:
      label: 'key'
  - name: Prompt to add deploy key
    when: sshkey.changed
    ansible.builtin.pause:
      prompt: "add the above keys to GitHub before continuing"

  - name: Create SSH config
    become: yes
    become_user: "{{ webhook.user }}"
    community.general.ssh_config:
      user: "{{ webhook.user }}"
      host: "github.com-{{ webhook.name }}"
      hostname: github.com
      identity_file: "{{ homedir }}/{{ webhook.user }}/.ssh/{{ webhook.name }}_deploy_key"

  - name: Clone repo
    become: yes
    become_user: "{{ webhook.user }}"
    ansible.builtin.git:
      repo: "git@github.com-{{ webhook.name }}:{{ webhook.gh_user | d('zeusops') }}/{{ webhook.name }}.git"
      dest: "{{ webhook.dest }}"
      accept_newhostkey: yes
      # Submodules are cloned manually because we want to set the SSH remote
      # address instead of HTTPS
      #recursive: no

  - name: Check if unit file exists
    ansible.builtin.stat:
      path: "/etc/systemd/system/{{ webhook.user }}.service"
    register: service
  - name: Fetch template
    run_once: yes
    ansible.builtin.fetch:
      src: "{{ webhook.dest }}/systemd/webhook.service.j2"
      dest: /tmp/webhook.service.j2
      flat: yes
    when: not service.stat.exists
  - name: Create systemd service
    ansible.builtin.template:
      src: /tmp/webhook.service.j2
      dest: "/etc/systemd/system/{{ webhook.user }}.service"
    vars:
      dir: "{{ webhook.dest }}"
    notify:
    - Reload systemd
    when: not service.stat.exists
  - name: Run webhook
    ansible.builtin.systemd:
      state: started
      enabled: yes
      name: "{{ webhook.user }}"

  # === Setup nginx ===

  - name: Remove default site
    ansible.builtin.file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: Copy config
    ansible.builtin.template:
      src: files/nginx/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
    notify:
    - Reload nginx

  # === zeusops.com ===

  - name: Clone zeusops.com repo
    ansible.builtin.git:
      repo: "https://github.com/zeusops/zeusops.com.git"
      dest: "{{ www_dir }}/www.zeusops.com"
      accept_newhostkey: yes

  - name: Enable site
    ansible.builtin.file:
      src: /etc/nginx/sites-available/www.zeusops.com.conf
      dest: /etc/nginx/sites-enabled/www.zeusops.com.conf
      force: yes
      follow: no
      state: link

  # TODO: setup TLS cert
  - name: Copy config
    ansible.builtin.template:
      src: files/nginx/site.conf.j2
      dest: /etc/nginx/sites-available/{{ server_name }}.conf
    vars:
      server_name: www.zeusops.com
      access_log: /var/log/nginx/{{ server_name }}.log
      error_log: /var/log/nginx/{{ server_name }}.err
      root: "{{ www_dir }}/{{ server_name }}/public"
      redirects: "{{ zeusopscom_redirects }}"
    notify:
    - Reload nginx

  # === gehock.dy.fi ===

  # NOTE: site data is currently copied manually to /var/www/gehock.dy.fi

  - name: Enable site
    ansible.builtin.file:
      src: /etc/nginx/sites-available/gehock.dy.fi.conf
      dest: /etc/nginx/sites-enabled/gehock.dy.fi.conf
      force: yes
      follow: no
      state: link

  # NOTE: setup TLS cert
  - name: Copy config
    ansible.builtin.template:
      src: files/nginx/site.conf.j2
      dest: /etc/nginx/sites-available/{{ server_name }}.conf
    vars:
      server_name: gehock.dy.fi
      access_log: /var/log/nginx/{{ server_name }}.log
      error_log: /var/log/nginx/{{ server_name }}.err
      root: "{{ www_dir }}/{{ server_name }}/httpdocs"
      le: yes
    notify:
    - Reload nginx

  # === cockpit ===
  - name: Create cockpit config
    ansible.builtin.template:
      src: files/cockpit/cockpit.conf.j2
      dest: /etc/cockpit/cockpit.conf


  # ====== handlers ======
  handlers:
  - name: Reload systemd
    ansible.builtin.systemd:
      daemon_reload: yes
  - name: Reload nginx
    ansible.builtin.service:
      name: nginx
      state: restarted
